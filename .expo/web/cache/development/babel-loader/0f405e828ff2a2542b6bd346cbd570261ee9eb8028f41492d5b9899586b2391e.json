{"ast":null,"code":"import React from 'react';\nimport { useEffect } from 'react';\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar keyboardDismissHandlers = [];\nexport var keyboardDismissHandlerManager = {\n  push: function push(handler) {\n    keyboardDismissHandlers.push(handler);\n    return function () {\n      keyboardDismissHandlers = keyboardDismissHandlers.filter(function (h) {\n        return h !== handler;\n      });\n    };\n  },\n  length: function length() {\n    return keyboardDismissHandlers.length;\n  },\n  pop: function pop() {\n    return keyboardDismissHandlers.pop();\n  }\n};\nexport var useKeyboardDismissable = function useKeyboardDismissable(_ref) {\n  var enabled = _ref.enabled,\n    callback = _ref.callback;\n  React.useEffect(function () {\n    var cleanupFn = function cleanupFn() {};\n    if (enabled) {\n      cleanupFn = keyboardDismissHandlerManager.push(callback);\n    } else {\n      cleanupFn();\n    }\n    return function () {\n      cleanupFn();\n    };\n  }, [enabled, callback]);\n  useBackHandler({\n    enabled: enabled,\n    callback: callback\n  });\n};\nexport function useBackHandler(_ref2) {\n  var enabled = _ref2.enabled,\n    callback = _ref2.callback;\n  useEffect(function () {\n    if (Platform.OS === 'web') {\n      var _document, _document$addEventLis;\n      var handleEscape = function handleEscape(e) {\n        if (e.key === 'Escape') {\n          callback();\n        }\n      };\n      (_document = document) === null || _document === void 0 || (_document = _document.body) === null || _document === void 0 || (_document$addEventLis = _document.addEventListener) === null || _document$addEventLis === void 0 || _document$addEventLis.call(_document, 'keyup', handleEscape);\n      return function () {\n        var _document2, _document2$removeEven;\n        (_document2 = document) === null || _document2 === void 0 || (_document2 = _document2.body) === null || _document2 === void 0 || (_document2$removeEven = _document2.removeEventListener) === null || _document2$removeEven === void 0 || _document2$removeEven.call(_document2, 'keyup', handleEscape);\n      };\n    } else {\n      var backHandler = function backHandler() {\n        callback();\n        return true;\n      };\n      if (enabled) {\n        BackHandler.addEventListener('hardwareBackPress', backHandler);\n      } else {\n        BackHandler.removeEventListener('hardwareBackPress', backHandler);\n      }\n      return function () {\n        return BackHandler.removeEventListener('hardwareBackPress', backHandler);\n      };\n    }\n  }, [enabled, callback]);\n}","map":{"version":3,"names":["React","useEffect","BackHandler","Platform","keyboardDismissHandlers","keyboardDismissHandlerManager","push","handler","filter","h","length","pop","useKeyboardDismissable","_ref","enabled","callback","cleanupFn","useBackHandler","_ref2","OS","_document","_document$addEventLis","handleEscape","e","key","document","body","addEventListener","call","_document2","_document2$removeEven","removeEventListener","backHandler"],"sources":["D:\\React Native\\Expo+glustack\\NoteSketch\\node_modules\\@react-native-aria\\interactions\\src\\useKeyboardDismisssable.ts"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { BackHandler, Platform } from 'react-native';\n\ntype IParams = {\n  enabled?: boolean;\n  callback: () => any;\n};\n\nlet keyboardDismissHandlers: Array<() => any> = [];\nexport const keyboardDismissHandlerManager = {\n  push: (handler: () => any) => {\n    keyboardDismissHandlers.push(handler);\n    return () => {\n      keyboardDismissHandlers = keyboardDismissHandlers.filter(\n        (h) => h !== handler\n      );\n    };\n  },\n  length: () => keyboardDismissHandlers.length,\n  pop: () => {\n    return keyboardDismissHandlers.pop();\n  },\n};\n\n/**\n * Handles attaching callback for Escape key listener on web and Back button listener on Android\n */\nexport const useKeyboardDismissable = ({ enabled, callback }: IParams) => {\n  React.useEffect(() => {\n    let cleanupFn = () => {};\n    if (enabled) {\n      cleanupFn = keyboardDismissHandlerManager.push(callback);\n    } else {\n      cleanupFn();\n    }\n    return () => {\n      cleanupFn();\n    };\n  }, [enabled, callback]);\n\n  useBackHandler({ enabled, callback });\n};\n\nexport function useBackHandler({ enabled, callback }: IParams) {\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const handleEscape = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          callback();\n        }\n      };\n\n      document?.body?.addEventListener?.('keyup', handleEscape);\n      return () => {\n        document?.body?.removeEventListener?.('keyup', handleEscape);\n      };\n    } else {\n      let backHandler = () => {\n        callback();\n        return true;\n      };\n      if (enabled) {\n        BackHandler.addEventListener('hardwareBackPress', backHandler);\n      } else {\n        BackHandler.removeEventListener('hardwareBackPress', backHandler);\n      }\n      return () =>\n        BackHandler.removeEventListener('hardwareBackPress', backHandler);\n    }\n  }, [enabled, callback]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}