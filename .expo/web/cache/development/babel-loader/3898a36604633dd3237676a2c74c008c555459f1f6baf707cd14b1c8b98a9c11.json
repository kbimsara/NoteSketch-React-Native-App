{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { disableTextSelection, restoreTextSelection } from './textSelection';\nimport { useMemo, useRef } from 'react';\nimport { useGlobalListeners } from '@react-aria/utils';\nexport function useMove(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = useRef({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _useGlobalListeners = useGlobalListeners(),\n    addGlobalListener = _useGlobalListeners.addGlobalListener,\n    removeGlobalListener = _useGlobalListeners.removeGlobalListener;\n  var moveProps = useMemo(function () {\n    var moveProps = {};\n    var start = function start() {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    var move = function move(pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 || onMoveStart({\n          type: 'movestart',\n          pointerType: pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    var end = function end(pointerType) {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd({\n          type: 'moveend',\n          pointerType: pointerType\n        });\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref) {\n          var identifier = _ref.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref2) {\n          var identifier = _ref2.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(deltaX, deltaY) {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps\n  };\n}","map":{"version":3,"names":["disableTextSelection","restoreTextSelection","useMemo","useRef","useGlobalListeners","useMove","props","onMoveStart","onMove","onMoveEnd","state","didMove","lastPosition","id","_useGlobalListeners","addGlobalListener","removeGlobalListener","moveProps","start","current","move","pointerType","deltaX","deltaY","type","end","PointerEvent","onMouseMove","e","button","pageX","pageY","onMouseUp","window","onMouseDown","stopPropagation","preventDefault","onTouchMove","touch","_toConsumableArray","changedTouches","findIndex","_ref","identifier","_e$changedTouches$tou","onTouchEnd","_ref2","onTouchStart","length","_e$changedTouches$","triggerKeyboardMove","onKeyDown","key"],"sources":["D:\\React Native\\Expo+glustack\\NoteSketch\\node_modules\\@react-native-aria\\slider\\src\\useMove.web.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { disableTextSelection, restoreTextSelection } from './textSelection';\nimport { MoveEvents, PointerType } from '@react-types/shared';\nimport React, { HTMLAttributes, useMemo, useRef } from 'react';\nimport { useGlobalListeners } from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let { onMoveStart, onMove, onMoveEnd } = props;\n\n  let state = useRef<{\n    didMove: boolean;\n    lastPosition: { pageX: number; pageY: number } | null;\n    id: number | null;\n  }>({ didMove: false, lastPosition: null, id: null });\n\n  let { addGlobalListener, removeGlobalListener } = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        // @ts-ignore\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n        });\n      }\n      // @ts-ignore\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        // @ts-ignore\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n        });\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(\n            'mouse',\n            e.pageX - state.current.lastPosition.pageX,\n            e.pageY - state.current.lastPosition.pageY\n          );\n          state.current.lastPosition = { pageX: e.pageX, pageY: e.pageY };\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = { pageX: e.pageX, pageY: e.pageY };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(\n          ({ identifier }) => identifier === state.current.id\n        );\n        if (touch >= 0) {\n          let { pageX, pageY } = e.changedTouches[touch];\n          move(\n            'touch',\n            pageX - state.current.lastPosition.pageX,\n            pageY - state.current.lastPosition.pageY\n          );\n          state.current.lastPosition = { pageX, pageY };\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(\n          ({ identifier }) => identifier === state.current.id\n        );\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let { pageX, pageY, identifier } = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = { pageX, pageY };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [\n    state,\n    onMoveStart,\n    onMove,\n    onMoveEnd,\n    addGlobalListener,\n    removeGlobalListener,\n  ]);\n\n  return { moveProps };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}