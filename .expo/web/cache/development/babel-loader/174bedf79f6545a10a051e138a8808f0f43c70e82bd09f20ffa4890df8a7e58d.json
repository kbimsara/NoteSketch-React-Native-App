{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useFormValidationState as $fQ2SF$useFormValidationState } from \"@react-stately/form\";\nimport { useControlledState as $fQ2SF$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $fQ2SF$useMemo, useState as $fQ2SF$useState } from \"react\";\nvar $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nvar $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n  var name = (0, $fQ2SF$useMemo)(function () {\n    return props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`;\n  }, [props.name]);\n  var _props_defaultValue;\n  var _ref = (0, $fQ2SF$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    selectedValue = _ref2[0],\n    setSelected = _ref2[1];\n  var _ref3 = (0, $fQ2SF$useState)(null),\n    _ref4 = _slicedToArray(_ref3, 2),\n    lastFocusedValue = _ref4[0],\n    setLastFocusedValue = _ref4[1];\n  var validation = (0, $fQ2SF$useFormValidationState)(_objectSpread(_objectSpread({}, props), {}, {\n    value: selectedValue\n  }));\n  var setSelectedValue = function setSelectedValue(value) {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n      validation.commitValidation();\n    }\n  };\n  var isInvalid = validation.displayValidation.isInvalid;\n  return _objectSpread(_objectSpread({}, validation), {}, {\n    name: name,\n    selectedValue: selectedValue,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || (isInvalid ? \"invalid\" : null),\n    isInvalid: isInvalid\n  });\n}\nexport { $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"names":["$a54cdc5c1942b639$var$instance","Math","round","random","$a54cdc5c1942b639$var$i","$a54cdc5c1942b639$export$bca9d026f8e704eb","props","name","$fQ2SF$useMemo","_props_defaultValue","_ref","$fQ2SF$useControlledState","value","defaultValue","onChange","_ref2","_slicedToArray","selectedValue","setSelected","_ref3","$fQ2SF$useState","_ref4","lastFocusedValue","setLastFocusedValue","validation","$fQ2SF$useFormValidationState","_objectSpread","setSelectedValue","isReadOnly","isDisabled","commitValidation","isInvalid","displayValidation","isRequired","validationState"],"sources":["D:\\React Native\\Expo+glustack\\NoteSketch\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\index.ts","D:\\React Native\\Expo+glustack\\NoteSketch\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\useRadioGroupState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useRadioGroupState} from './useRadioGroupState';\n\nexport type {RadioGroupProps} from '@react-types/radio';\nexport type {RadioGroupState} from './useRadioGroupState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FormValidationState, useFormValidationState} from '@react-stately/form';\nimport {RadioGroupProps} from '@react-types/radio';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface RadioGroupState extends FormValidationState {\n  /**\n   * The name for the group, used for native form submission.\n   * @deprecated\n   * @private\n   */\n  readonly name: string,\n\n  /** Whether the radio group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the radio group is read only. */\n  readonly isReadOnly: boolean,\n\n  /** Whether the radio group is required. */\n  readonly isRequired: boolean,\n\n  /**\n   * Whether the radio group is valid or invalid.\n   * @deprecated Use `isInvalid` instead.\n   */\n  readonly validationState: ValidationState | null,\n\n  /** Whether the radio group is invalid. */\n  readonly isInvalid: boolean,\n\n  /** The currently selected value. */\n  readonly selectedValue: string | null,\n\n  /** Sets the selected value. */\n  setSelectedValue(value: string | null): void,\n\n  /** The value of the last focused radio. */\n  readonly lastFocusedValue: string | null,\n\n  /** Sets the last focused value. */\n  setLastFocusedValue(value: string | null): void\n}\n\nlet instance = Math.round(Math.random() * 10000000000);\nlet i = 0;\n\n/**\n * Provides state management for a radio group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useRadioGroupState(props: RadioGroupProps): RadioGroupState  {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = useMemo(() => props.name || `radio-group-${instance}-${++i}`, [props.name]);\n  let [selectedValue, setSelected] = useControlledState(props.value, props.defaultValue ?? null, props.onChange);\n  let [lastFocusedValue, setLastFocusedValue] = useState<string | null>(null);\n\n  let validation = useFormValidationState({\n    ...props,\n    value: selectedValue\n  });\n\n  let setSelectedValue = (value) => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n      validation.commitValidation();\n    }\n  };\n\n  let isInvalid = validation.displayValidation.isInvalid;\n\n  return {\n    ...validation,\n    name,\n    selectedValue: selectedValue,\n    setSelectedValue,\n    lastFocusedValue,\n    setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || (isInvalid ? 'invalid' : null),\n    isInvalid\n  };\n}\n"],"mappings":";;;;;;;ACyDA,IAAIA,8BAAA,GAAWC,IAAA,CAAKC,KAAK,CAACD,IAAA,CAAKE,MAAM,KAAK;AAC1C,IAAIC,uBAAA,GAAI;AAMD,SAASC,0CAAmBC,KAAsB;EAEvD,IAAIC,IAAA,GAAO,IAAAC,cAAM,EAAE;IAAA,OAAMF,KAAA,CAAMC,IAAI,IAAK,eAAcP,8BAAS,IAAG,EAAEI,uBAAE,EAAC;EAAA,GAAE,CAACE,KAAA,CAAMC,IAAI,CAAC;MAClBE,mBAAA;EAAnE,IAAAC,IAAA,GAAmC,IAAAC,yBAAiB,EAAEL,KAAA,CAAMM,KAAK,EAAE,CAAAH,mBAAA,GAAAH,KAAA,CAAMO,YAAY,cAAlBJ,mBAAA,cAAAA,mBAAA,GAAsB,MAAMH,KAAA,CAAMQ,QAAQ;IAAAC,KAAA,GAAAC,cAAA,CAAAN,IAAA;IAAxGO,aAAA,GAAAF,KAAA;IAAeG,WAAA,GAAAH,KAAA;EACpB,IAAAI,KAAA,GAA8C,IAAAC,eAAO,EAAiB;IAAAC,KAAA,GAAAL,cAAA,CAAAG,KAAA;IAAjEG,gBAAA,GAAAD,KAAA;IAAkBE,mBAAA,GAAAF,KAAA;EAEvB,IAAIG,UAAA,GAAa,IAAAC,6BAAqB,EAAAC,aAAA,CAAAA,aAAA,KACjCpB,KAAK;IACRM,KAAA,EAAOK;EAAA,EACT;EAEA,IAAIU,gBAAA,GAAmB,SAAnBA,iBAAoBf,KAAA;IACtB,IAAI,CAACN,KAAA,CAAMsB,UAAU,IAAI,CAACtB,KAAA,CAAMuB,UAAU,EAAE;MAC1CX,WAAA,CAAYN,KAAA;MACZY,UAAA,CAAWM,gBAAgB;IAC7B;EACF;EAEA,IAAIC,SAAA,GAAYP,UAAA,CAAWQ,iBAAiB,CAACD,SAAS;EAEtD,OAAAL,aAAA,CAAAA,aAAA,KACKF,UAAU;UACbjB,IAAA;IACAU,aAAA,EAAeA,aAAA;sBACfU,gBAAA;sBACAL,gBAAA;yBACAC,mBAAA;IACAM,UAAA,EAAYvB,KAAA,CAAMuB,UAAU,IAAI;IAChCD,UAAA,EAAYtB,KAAA,CAAMsB,UAAU,IAAI;IAChCK,UAAA,EAAY3B,KAAA,CAAM2B,UAAU,IAAI;IAChCC,eAAA,EAAiB5B,KAAA,CAAM4B,eAAe,KAAKH,SAAA,GAAY,YAAY,IAAG;eACtEA;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}