{"ast":null,"code":"export var useAccordionItem = function useAccordionItem(state, props) {\n  var toggleItem = state.toggleItem;\n  var value = props.value,\n    isExpanded = props.isExpanded,\n    isDisabled = props.isDisabled;\n  var buttonId = `accordion-button-${value}`;\n  var regionId = `accordion-region-${value}`;\n  var toggle = function toggle() {\n    toggleItem(value, isDisabled);\n  };\n  return {\n    regionProps: {\n      'id': regionId,\n      'aria-labelledby': buttonId,\n      'role': 'region'\n    },\n    buttonProps: {\n      'id': buttonId,\n      'aria-controls': regionId,\n      'aria-disabled': isDisabled,\n      'aria-expanded': isExpanded,\n      'onPress': toggle,\n      'role': 'button'\n    },\n    isExpanded: isExpanded\n  };\n};","map":{"version":3,"names":["useAccordionItem","state","props","toggleItem","value","isExpanded","isDisabled","buttonId","regionId","toggle","regionProps","buttonProps"],"sources":["D:\\React Native\\Expo+glustack\\NoteSketch\\node_modules\\@react-native-aria\\accordion\\lib\\module\\useAccordionItem.ts"],"sourcesContent":["import { State } from './types';\n\ntype Props = {\n  value: string;\n  isExpanded: boolean;\n  isDisabled: boolean;\n};\n\nexport const useAccordionItem = (state: State, props: Props) => {\n  const { toggleItem } = state;\n  const { value, isExpanded, isDisabled } = props;\n\n  // Generate unique IDs for each accordion trigger and region\n  const buttonId = `accordion-button-${value}`;\n  const regionId = `accordion-region-${value}`;\n\n  const toggle = () => {\n    toggleItem(value, isDisabled);\n  };\n\n  return {\n    regionProps: {\n      'id': regionId,\n      'aria-labelledby': buttonId,\n      'role': 'region',\n    },\n    buttonProps: {\n      'id': buttonId,\n      'aria-controls': regionId,\n      'aria-disabled': isDisabled,\n      'aria-expanded': isExpanded,\n      'onPress': toggle,\n      'role': 'button',\n    },\n    isExpanded,\n  };\n};\n"],"mappings":"AAQA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAD,EAAeC,KAAf,EAAgC;EAC9D,IAAQC,UAAA,GAAeF,KAAvB,CAAQE,UAAA;EACR,IAAQC,KAAF,GAAoCF,KAA1C,CAAQE,KAAF;IAASC,UAAT,GAAoCH,KAA1C,CAAeG,UAAT;IAAqBC,UAAA,GAAeJ,KAA1C,CAA2BI,UAAA;EAG3B,IAAMC,QAAQ,GAAI,oBAAmBH,KAAM,EAA3C;EACA,IAAMI,QAAQ,GAAI,oBAAmBJ,KAAM,EAA3C;EAEA,IAAMK,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBN,UAAU,CAACC,KAAD,EAAQE,UAAR,CAAV;EACD,CAFD;EAIA,OAAO;IACLI,WAAW,EAAE;MACX,MAAMF,QADK;MAEX,mBAAmBD,QAFR;MAGX,QAAQ;IAHG,CADR;IAMLI,WAAW,EAAE;MACX,MAAMJ,QADK;MAEX,iBAAiBC,QAFN;MAGX,iBAAiBF,UAHN;MAIX,iBAAiBD,UAJN;MAKX,WAAWI,MALA;MAMX,QAAQ;IANG,CANR;IAcLJ,UAAA,EAAAA;EAdK,CAAP;AAgBD,CA5BM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}